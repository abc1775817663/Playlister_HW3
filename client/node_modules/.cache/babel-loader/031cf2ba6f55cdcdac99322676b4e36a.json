{"ast":null,"code":"/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we're using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it's a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nexport const createPlaylist = list => api.post(\"/playlist\", list);\nexport const updatePlaylistById = (id, playlist) => api.put(`/playlist/${id}`, playlist);\nconst apis = {\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById,\n  createPlaylist,\n  updatePlaylistById\n};\nexport default apis;","map":{"version":3,"names":["axios","api","create","baseURL","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","id","createPlaylist","list","post","updatePlaylistById","playlist","put","apis"],"sources":["C:/Users/abc17/OneDrive - Stony Brook University/desktop/CSE 316/Playlister_HW3/client/src/api/index.js"],"sourcesContent":["/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we're using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it's a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:4000/api',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\nexport const getAllPlaylists = () => api.get(`/playlists`)\r\nexport const getPlaylistPairs = () => api.get('playlistpairs')\r\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\r\nexport const createPlaylist = (list) => api.post(\"/playlist\", list);\r\nexport const updatePlaylistById = (id, playlist) => api.put(`/playlist/${id}`, playlist);\r\nconst apis = {\r\n    getAllPlaylists,\r\n    getPlaylistPairs,\r\n    getPlaylistById,\r\n    createPlaylist,\r\n    updatePlaylistById,\r\n\r\n}\r\n\r\nexport default apis\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAML,GAAG,CAACI,GAAJ,CAAQ,eAAR,CAA/B;AACP,OAAO,MAAME,eAAe,GAAIC,EAAD,IAAQP,GAAG,CAACI,GAAJ,CAAS,aAAYG,EAAG,EAAxB,CAAhC;AACP,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAUT,GAAG,CAACU,IAAJ,CAAS,WAAT,EAAsBD,IAAtB,CAAjC;AACP,OAAO,MAAME,kBAAkB,GAAG,CAACJ,EAAD,EAAKK,QAAL,KAAkBZ,GAAG,CAACa,GAAJ,CAAS,aAAYN,EAAG,EAAxB,EAA2BK,QAA3B,CAA7C;AACP,MAAME,IAAI,GAAG;EACTX,eADS;EAETE,gBAFS;EAGTC,eAHS;EAITE,cAJS;EAKTG;AALS,CAAb;AASA,eAAeG,IAAf"},"metadata":{},"sourceType":"module"}